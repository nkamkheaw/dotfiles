{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "li-json-schema://trunkDev",
  "type": "object",
  "properties": {
    "autoRevert": {
      "id": "li-json-schema://autoRevert",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "enum": [
            "pcs",
            "pcl"
          ]
        }
      ],
      "title": "Revert change on failure",
      "description": "If true (default), a change is reverted if the build fails. See http://go/mptrunkdev for details."
    },
    "containerInfrastructure": {
      "id": "li-json-schema://containerInfrastructure",
      "type": "boolean",
      "title": "Container services control",
      "description": "Controls starting Kafka, Zookeeper and schema-registry during PCS/PCL. See http://go/mptrunkdev for details."
    },
    "continueAfterFirstFailure": {
      "id": "li-json-schema://continueAfterFirstFailure",
      "type": "boolean",
      "title": "CI flow control",
      "description": "Whether to continue with additional testing after a failure (during PCL). See http://go/mptrunkdev for details."
    },
    "hudsonPool": {
      "id": "li-json-schema://hudsonPool",
      "type": "string",
      "title": "CI pool",
      "description": "CI pool to use for building this Multiproduct. See http://go/mptrunkdev for details."
    },
    "deployKafka": {
      "id": "li-json-schema://deployKafka",
      "type": "boolean",
      "title": "Kafka service control",
      "description": "If containerInfrastructure enabled, controls whether Kafka is started (default true). See http://go/mptrunkdev for details."
    },
    "alwaysRunPCL": {
      "id": "li-json-schema://alwaysRunPCL",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Mandatory dependency tests",
      "description": "List of VIP consumers that must always pass PCL."
    },
    "distributedPclCommands": {
      "id": "li-json-schema://distributedPclCommands",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "distributedPcsCommands": {
      "id": "li-json-schema://distributedPcsCommands",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "distributedPrecommitCommands": {
      "id": "li-json-schema://distributedPrecommitCommands",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "oracle": {
      "id": "li-json-schema://oracle",
      "type": "string"
    },
    "mysql": {
      "id": "li-json-schema://mysql",
      "type": "string"
    },
    "espresso": {
      "id": "li-json-schema://espresso",
      "type": "boolean"
    },
    "includeInformationalTests": {
      "id": "li-json-schema://includeInformationalTests",
      "type": "boolean",
      "title": "Include informational dependency tests",
      "description": "When set to false, does not run dependent tests that are purely informational, e.g. consumers using a different major version."
    },
    "skipIgnored": {
      "id": "li-json-schema://skipIgnored",
      "type": "boolean",
      "description": "DEPRECATED"
    },
    "distributedTestDir": {
      "id": "li-json-schema://distributedTestDir",
      "type": "string",
      "title": "Shared directory",
      "description": "Directory to share between parent build and distributed tests."
    },
    "distributedPcsDir": {
      "id": "li-json-schema://distributedPcsDir",
      "type": "string",
      "title": "Shared directory",
      "description": "DEPRECATED: see distributedTestDir instead."
    },
    "fullValidation": {
      "id": "li-json-schema://fullValidation",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Dependent product validation",
      "description": "Dependent Multiproducts to use for PCL validation. See http://go/mptrunkdev for details."
    },
    "reboot": {
      "id": "li-json-schema://reboot",
      "type": "boolean",
      "title": "Reboot CI node",
      "description": "Reboot CI node after each job. See http://go/mptrunkdev for details and restrictions."
    },
    "lockBrokenTrunk": {
      "id": "li-json-schema://lockBrokenTrunk",
      "type": "boolean",
      "title": "Lock trunk on auto revert failure",
      "description": "Lock the trunk if an auto revert fails. See http://go/mptrunkdev for details."
    },
    "timeout": {
      "id": "li-json-schema://timeout",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ],
      "title": "Abort a job on timeout.",
      "description": "Forcefully abort a postcommit or wc-test job if the timeout is reached. See http://go/mptrunkdev for details."
    },
    "fileArchiveGlob": {
      "id": "li-json-schema://fileArchiveGlob",
      "type": "string",
      "title": "Archive glob pattern",
      "description": "Comma-separated ant-style patterns. Files matching the pattern will be archived. See http://go/mptrunkdev for details."
    },
    "allowedFailureRate": {
      "id": "li-json-schema://allowedFailureRate",
      "type": "number",
      "title": "Acceptable failure rate",
      "description": "Acceptable failure rate when MP PCL batching is used. See http://go/mp-batching for details."
    },
    "expectedPassRate": {
      "id": "li-json-schema://expectedPassRate",
      "type": "number",
      "title": "Acceptable pass rate",
      "description": "Acceptable pass rate when MP PCL batching is used. See http://go/mp-batching for details."
    }
  },
  "additionalProperties": false
}
